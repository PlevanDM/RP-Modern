import { useState, useEffect, useCallback } from 'react';
import { EscrowPayment, EscrowStatus } from '../types';
import { escrowService } from '../services/api/escrowService';
import { AlertCircle, Clock, Loader } from 'lucide-react';
import { ActionButton } from './ActionButton';
import { safeLocaleCurrency, safeLocaleDate } from '../utils/localeUtils';

interface EscrowPaymentManagerProps {
  orderId: string;
  clientId: string;
  masterId: string;
  amount: number;
  userRole: 'client' | 'master';
}

export function EscrowPaymentManager({
  orderId,
  clientId,
  masterId,
  amount,
  userRole,
}: EscrowPaymentManagerProps) {
  const [payment, setPayment] = useState<EscrowPayment | null>(null);
  const [isLoading, setIsLoading] = useState(true);
  const [error, setError] = useState<string | null>(null);
  const [showDispute, setShowDispute] = useState(false);
  const [disputeReason, setDisputeReason] = useState('');

  const handleApiCall = useCallback(async (apiCall: () => Promise<EscrowPayment | EscrowPayment[] | void>) => {
    setIsLoading(true);
    setError(null);
    try {
      await new Promise(resolve => setTimeout(resolve, 500));
      await apiCall();
      const updatedPayment = escrowService.getOrderPayments(orderId)[0] || null;
      setPayment(updatedPayment);
    } catch (e: unknown) {
      const errorMessage = e instanceof Error ? e.message : '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞';
      setError(errorMessage);
      alert(`–û—à–∏–±–∫–∞: ${errorMessage}`);
    } finally {
      setIsLoading(false);
    }
  }, [orderId]);

  useEffect(() => {
    handleApiCall(async () => {
      const payments = escrowService.getOrderPayments(orderId);
      if (payments.length > 0) {
        setPayment(payments[0]);
      } else {
        setPayment(null); // –Ø–≤–Ω–æ —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º null, –µ—Å–ª–∏ –ø–ª–∞—Ç–µ–∂–µ–π –Ω–µ—Ç
      }
    });
  }, [orderId, handleApiCall]);

  const createEscrow = () => handleApiCall(() =>
    escrowService.createEscrowPayment(orderId, clientId, masterId, amount)
  );

  const confirmPayment = () => payment && handleApiCall(() =>
    escrowService.confirmPaymentByClient(payment.id)
  );

  const confirmWork = () => payment && handleApiCall(() =>
    escrowService.confirmWorkByMaster(payment.id)
  );

  const approveWork = () => payment && handleApiCall(() =>
    escrowService.approveWorkByClient(payment.id)
  );

  const openDispute = () => {
    if (!payment || !disputeReason) return;
    handleApiCall(() =>
      escrowService.openDispute(payment.id, disputeReason, userRole)
    );
    setShowDispute(false);
  };

  if (isLoading && !payment) {
    return (
      <div className="flex justify-center items-center p-6 bg-gray-50 rounded-lg">
        <Loader className="animate-spin text-blue-600" size={32} />
        <p className="ml-2 text-gray-700">–ó–∞–≥—Ä—É–∑–∫–∞...</p>
      </div>
    );
  }

  if (error) {
    return (
      <div className="bg-red-50 border border-red-200 rounded-lg p-6 text-center">
        <AlertCircle className="mx-auto text-red-500" size={32} />
        <p className="mt-2 text-red-800 font-semibold">{error}</p>
      </div>
    );
  }

  if (!payment) {
    return (
      <div className="bg-blue-50 border border-blue-200 rounded-lg p-6">
        <h3 className="text-lg font-bold text-gray-900 mb-4">üí∞ Escrow –ü–ª–∞—Ç–µ–∂</h3>
        <p className="text-gray-700 mb-4">
          –°—É–º–∞: <span className="font-bold">{safeLocaleCurrency(amount)} –≥—Ä–Ω</span>
        </p>
        {userRole === 'client' && (
          <button
            onClick={createEscrow}
            disabled={isLoading}
            className="w-full bg-blue-600 text-white px-4 py-3 rounded-lg hover:bg-blue-700 font-semibold transition disabled:bg-blue-300 flex items-center justify-center"
          >
            {isLoading ? <Loader className="animate-spin" size={20} /> : '‚úÖ –°—Ç–≤–æ—Ä–∏—Ç–∏ Escrow –ü–ª–∞—Ç–µ–∂'}
          </button>
        )}
      </div>
    );
  }

  return (
    <div className="bg-gradient-to-br from-blue-50 to-blue-100 border-2 border-blue-300 rounded-lg p-6 relative">
      {isLoading && (
        <div className="absolute inset-0 bg-white bg-opacity-70 flex justify-center items-center rounded-lg z-10">
          <Loader className="animate-spin text-blue-600" size={32} />
        </div>
      )}
      <div className="flex items-center justify-between mb-6">
        <h3 className="text-lg font-bold text-gray-900">üìä –°—Ç–∞—Ç—É—Å Escrow –ü–ª–∞—Ç–µ–∂—É</h3>
        <span className={`px-3 py-1 rounded-full text-sm font-semibold ${getStatusColor(payment.status)}`}>
          {getStatusLabel(payment.status)}
        </span>
      </div>

      {/* === –í–û–°–°–¢–ê–ù–û–í–õ–ï–ù–ù–´–ô –ë–õ–û–ö: –î–ï–¢–ê–õ–ò –ü–õ–ê–¢–ï–ñ–ê === */}
      <div className="grid grid-cols-2 gap-4 mb-6">
        <div>
          <p className="text-sm text-gray-600">–°—É–º–∞ –ø–ª–∞—Ç–µ–∂—É</p>
          <p className="text-lg font-bold text-gray-900">{safeLocaleCurrency(payment.amount)} –≥—Ä–Ω</p>
        </div>
        <div>
          <p className="text-sm text-gray-600">–ú–∞—Å—Ç–µ—Ä –æ—Ç—Ä–∏–º–∞—î</p>
          <p className="text-lg font-bold text-green-600">{safeLocaleCurrency(payment.masterReceiveAmount)} –≥—Ä–Ω</p>
        </div>
        <div>
          <p className="text-sm text-gray-600">–ö–ª—ñ—î–Ω—Ç –ø—ñ–¥—Ç–≤–µ—Ä–¥–∏–≤</p>
          <p className="text-sm font-semibold">
            {payment.clientConfirmed ? '‚úÖ –¢–∞–∫' : '‚è≥ –ù—ñ'}
          </p>
        </div>
        <div>
          <p className="text-sm text-gray-600">–ú–∞–π—Å—Ç–µ—Ä –ø—ñ–¥—Ç–≤–µ—Ä–¥–∏–≤</p>
          <p className="text-sm font-semibold">
            {payment.masterConfirmed ? '‚úÖ –¢–∞–∫' : '‚è≥ –ù—ñ'}
          </p>
        </div>
      </div>

      {/* === –í–û–°–°–¢–ê–ù–û–í–õ–ï–ù–ù–´–ô –ë–õ–û–ö: –¢–ê–ô–ú–õ–ê–ô–ù –ü–†–û–ì–†–ï–°–°–ê === */}
      <div className="bg-white rounded-lg p-4 mb-6">
        <div className="space-y-3">
          <div className="flex items-center gap-3">
            <div className={`w-8 h-8 rounded-full flex items-center justify-center text-sm font-bold ${payment.clientConfirmed ? 'bg-green-500 text-white' : 'bg-gray-300 text-gray-700'}`}>
              {payment.clientConfirmed ? '‚úì' : '1'}
            </div>
            <p className="font-semibold">–ü–ª–∞—Ç–µ–∂ –≤—ñ–¥ –∫–ª—ñ—î–Ω—Ç–∞</p>
          </div>
          <div className="flex items-center gap-3">
            <div className={`w-8 h-8 rounded-full flex items-center justify-center text-sm font-bold ${payment.masterConfirmed ? 'bg-green-500 text-white' : 'bg-gray-300 text-gray-700'}`}>
              {payment.masterConfirmed ? '‚úì' : '2'}
            </div>
            <p className="font-semibold">–ú–∞–π—Å—Ç–µ—Ä –≤–∏–∫–æ–Ω–∞–≤ —Ä–æ–±–æ—Ç—É</p>
          </div>
          <div className="flex items-center gap-3">
            <div className={`w-8 h-8 rounded-full flex items-center justify-center text-sm font-bold ${payment.status === EscrowStatus.RELEASED_TO_MASTER ? 'bg-green-500 text-white' : 'bg-gray-300 text-gray-700'}`}>
              {payment.status === EscrowStatus.RELEASED_TO_MASTER ? '‚úì' : '3'}
            </div>
            <p className="font-semibold">–ü–ª–∞—Ç–µ–∂ –≤–∏–ø–ª–∞—á–µ–Ω–æ –º–∞—Å—Ç–µ—Ä—É</p>
          </div>
        </div>
      </div>

      {/* ACTIONS (–∏—Å–ø–æ–ª—å–∑—É–µ–º –Ω–æ–≤—ã–π ActionButton) */}
      <div className="space-y-3">
        <ActionButton
          payment={payment}
          userRole={userRole}
          isLoading={isLoading}
          onConfirmPayment={confirmPayment}
          onApproveWork={approveWork}
          onConfirmWork={confirmWork}
          onShowDispute={() => setShowDispute(true)}
        />

        {showDispute && (
          <div className="bg-white border-2 border-red-300 rounded-lg p-4 space-y-3">
            <textarea
              value={disputeReason}
              onChange={(e) => setDisputeReason(e.target.value)}
              placeholder="–û–ø–∏—Å–∞—Ç–∏ –ø—Ä–∏—á–∏–Ω—É —Å–ø–æ—Ä—É..."
              className="w-full px-3 py-2 border border-gray-300 rounded-lg"
              rows={3}
            />
            <div className="flex gap-2">
              <button onClick={openDispute} disabled={isLoading} className="flex-1 bg-red-600 text-white px-3 py-2 rounded-lg">
                {isLoading ? <Loader className="animate-spin mx-auto" size={20} /> : '–í—ñ–¥–∫—Ä–∏—Ç–∏ –°–ø—ñ—Ä'}
              </button>
              <button onClick={() => setShowDispute(false)} className="flex-1 bg-gray-300 text-gray-900 px-3 py-2 rounded-lg">
                –°–∫–∞—Å—É–≤–∞—Ç–∏
              </button>
            </div>
          </div>
        )}

        {/* === –í–û–°–°–¢–ê–ù–û–í–õ–ï–ù–ù–´–ô –ë–õ–û–ö: –°–¢–ê–¢–£–°–ù–´–ï –°–û–û–ë–©–ï–ù–ò–Ø === */}
        {payment.status === EscrowStatus.DISPUTED && (
          <div className="bg-red-50 border-2 border-red-300 rounded-lg p-4">
            <p className="text-red-900 font-semibold mb-2">‚öñÔ∏è –°–ø—ñ—Ä —É —Ä–æ–∑–≥–ª—è–¥—ñ</p>
            <p className="text-sm text-red-700">–ü—Ä–∏—á–∏–Ω–∞: {payment.disputeReason}</p>
          </div>
        )}
        {payment.status === EscrowStatus.RELEASED_TO_MASTER && (
          <div className="bg-green-50 border-2 border-green-300 rounded-lg p-4">
            <p className="text-green-900 font-semibold mb-2">‚úÖ –ü–ª–∞—Ç–µ–∂ –∑–∞–≤–µ—Ä—à–µ–Ω–æ</p>
            <p className="text-sm text-green-700">–ú–∞–π—Å—Ç–µ—Ä –æ—Ç—Ä–∏–º–∞–≤ {payment.masterReceiveAmount} –≥—Ä–Ω</p>
          </div>
        )}
        {payment.status === EscrowStatus.REFUNDED_TO_CLIENT && (
          <div className="bg-blue-50 border-2 border-blue-300 rounded-lg p-4">
            <p className="text-blue-900 font-semibold mb-2">üîÑ –ü–ª–∞—Ç–µ–∂ –ø–æ–≤–µ—Ä–Ω–µ–Ω–æ</p>
            <p className="text-sm text-blue-700">–ö–ª—ñ—î–Ω—Ç –æ—Ç—Ä–∏–º–∞–≤ {payment.amount} –≥—Ä–Ω –Ω–∞–∑–∞–¥</p>
          </div>
        )}
      </div>

      {/* === –í–û–°–°–¢–ê–ù–û–í–õ–ï–ù–ù–´–ô –ë–õ–û–ö: –ò–ù–§–û–†–ú–ê–¶–ò–Ø –û –°–†–û–ö–ï –î–ï–ô–°–¢–í–ò–Ø === */}
      {payment.status === EscrowStatus.AWAITING_CLIENT && (
        <div className="mt-4 bg-yellow-50 border border-yellow-200 rounded-lg p-3 flex items-start gap-3">
          <Clock size={18} className="text-yellow-600 mt-0.5" />
          <div>
            <p className="text-sm font-semibold text-yellow-900">–ß–∞—Å –¥—ñ—ó: {safeLocaleDate(payment.expiresAt)}</p>
            <p className="text-xs text-yellow-700">–Ø–∫—â–æ –Ω–µ –±—É–¥–µ –ø—ñ–¥—Ç–≤–µ—Ä–¥–∂–µ–Ω–æ, –ø–ª–∞—Ç–µ–∂ –±—É–¥–µ –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ –ø–æ–≤–µ—Ä–Ω–µ–Ω–æ</p>
          </div>
        </div>
      )}
    </div>
  );
}

// –§—É–Ω–∫—Ü–∏–∏ getStatusColor –∏ getStatusLabel –æ—Å—Ç–∞—é—Ç—Å—è –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π
function getStatusColor(status: EscrowStatus): string {
  switch (status) {
    case EscrowStatus.AWAITING_CLIENT: return 'bg-yellow-100 text-yellow-800';
    case EscrowStatus.AWAITING_MASTER: return 'bg-blue-100 text-blue-800';
    case EscrowStatus.CONFIRMED_BY_MASTER: return 'bg-purple-100 text-purple-800';
    case EscrowStatus.RELEASED_TO_MASTER: return 'bg-green-100 text-green-800';
    case EscrowStatus.REFUNDED_TO_CLIENT: return 'bg-blue-100 text-blue-800';
    case EscrowStatus.DISPUTED: return 'bg-red-100 text-red-800';
    case EscrowStatus.CANCELLED: return 'bg-gray-100 text-gray-800';
    default: return 'bg-gray-100 text-gray-800';
  }
}

function getStatusLabel(status: EscrowStatus): string {
  switch (status) {
    case EscrowStatus.AWAITING_CLIENT: return '‚è≥ –û—á—ñ–∫—É–≤–∞–Ω–Ω—è –ø–ª–∞—Ç–µ–∂—É';
    case EscrowStatus.AWAITING_MASTER: return '‚è≥ –û–∂–∏–¥–∞—é—â–∏–π –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è';
    case EscrowStatus.CONFIRMED_BY_MASTER: return '‚è≥ –û—á—ñ–∫—É–≤–∞–Ω–Ω—è –ø—ñ–¥—Ç–≤–µ—Ä–¥–∂–µ–Ω–Ω—è –∫–ª—ñ—î–Ω—Ç–∞';
    case EscrowStatus.RELEASED_TO_MASTER: return '‚úÖ –í–∏–ø–ª–∞—á–µ–Ω–æ';
    case EscrowStatus.REFUNDED_TO_CLIENT: return 'üîÑ –ü–æ–≤–µ—Ä–Ω–µ–Ω–æ';
    case EscrowStatus.DISPUTED: return '‚öñÔ∏è –°–ø—ñ—Ä';
    case EscrowStatus.CANCELLED: return '‚ùå –û—Ç–º–µ–Ω–µ–Ω–æ';
    default: return '–ù–µ–≤—ñ–¥–æ–º–∏–π —Å—Ç–∞—Ç—É—Å';
  }
}
